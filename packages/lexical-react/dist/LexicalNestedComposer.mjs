/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import{useCollaborationContext as e}from"@lexical/react/LexicalCollaborationContext";import{LexicalComposerContext as t,createLexicalComposerContext as r}from"@lexical/react/LexicalComposerContext";import*as o from"react";import{useRef as n,useContext as l,useMemo as i,useEffect as a}from"react";var s=function(e){const t=new URLSearchParams;t.append("code",e);for(let e=1;e<arguments.length;e++)t.append("v",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)};function c(e){const t=e.transform();return null!==t?new Set([t]):new Set}function p({initialEditor:p,children:f,initialNodes:d,initialTheme:m,skipCollabChecks:u}){const h=n(!1),x=l(t);null==x&&s(9);const[g,{getTheme:v}]=x,_=i((()=>{const e=m||v()||void 0,t=r(x,e);if(void 0!==e&&(p._config.theme=e),p._parentEditor=g,d)for(let e of d){let t=null,r=null;if("function"!=typeof e){const o=e;e=o.replace,t=o.with,r=o.withKlass||null}const o=p._nodes.get(e.getType());p._nodes.set(e.getType(),{exportDOM:o?o.exportDOM:void 0,klass:e,replace:t,replaceWithKlass:r,transforms:c(e)})}else{const e=p._nodes=new Map(g._nodes);for(const[t,r]of e)p._nodes.set(t,{exportDOM:r.exportDOM,klass:r.klass,replace:r.replace,replaceWithKlass:r.replaceWithKlass,transforms:c(r.klass)})}return p._config.namespace=g._config.namespace,p._editable=g._editable,[p,t]}),[]),{isCollabActive:w,yjsDocMap:b}=e(),C=u||h.current||b.has(p.getKey());return a((()=>{C&&(h.current=!0)}),[C]),a((()=>g.registerEditableListener((e=>{p.setEditable(e)}))),[p,g]),o.createElement(t.Provider,{value:_},!w||C?f:null)}export{p as LexicalNestedComposer};
